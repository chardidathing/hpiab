---
- name: Setup Vaultwarden
  hosts: box
  become: true
  tasks:
    - name: Create Container Directory
      ansible.builtin.file:
        path: "{{ container_path }}vaultwarden/"
        state: directory
        mode: '0755'
        owner: "{{ ansible_user_uid }}"
        group: "{{ ansible_user_gid }}"
    - name: Generate and set admin token
      ansible.builtin.set_fact:
        admin_token: "{{ lookup('community.general.random_string', length=48) }}"
    - name: Show Admin token (debug)
      ansible.builtin.debug:
        msg: "{{ admin_token }}"
      when: debug_on is true
    - name: Actuall write admin token to file
      ansible.builtin.copy:
        dest: "{{ container_path }}vaultwarden/.admintoken"
        content: "{{ admin_token }}"
        mode: '0600'
        owner: "{{ ansible_user_uid }}"
        group: "{{ ansible_user_gid }}"
    - name: Configure Vaultwarden
      community.docker.docker_container:
        name: vaultwarden
        image: vaultwarden/server:1.32.2
        restart_policy: unless-stopped
        security_opts:
          no-new-privileges:true
        env:
          TZ: "{{ timezone }}"
          ADMIN_TOKEN: "{{ admin_token }}"
        volumes:
          "{{ container_path }}vaultwarden/data:/data"
        labels:
          traefik.enable: "true"
          traefik.http.routers.vaultwarden.rule: "Host(`vaultwarden.{{ domain }}`)"
          traefik.http.routers.vaultwarden.entrypoints: "https"
          traefik.http.services.vaultwarden.loadbalancer.server.port: "80"
          traefik.docker.network: "services"
        networks:
          - name: services

    - name: Ensure services network exists
      community.docker.docker_network:
        name: services
        state: present
