---
- name: Setup Pi-Hole
  hosts: box
  become: true
  tasks:
    - name: Create Container Directory
      ansible.builtin.file:
        path: "{{ container_path }}pihole/pihole-data"
        state: directory
        mode: '0755'
        owner: "{{ ansible_user_uid }}"
        group: "{{ ansible_user_gid }}"
    - name: Create Container Directory
      ansible.builtin.file:
        path: "{{ container_path }}pihole/pihole-dnsmasq"
        state: directory
        mode: '0755'
        owner: "{{ ansible_user_uid }}"
        group: "{{ ansible_user_gid }}"

    - name: Create custom.list for internal DNS
      ansible.builtin.template:
        src: "{{ pihole_list_src }}"
        dest: "{{ destination_file_path }}"
        owner: "{{ ansible_user_uid }}"
        group: "{{ ansible_user_gid }}"
        mode: '0644'
      vars:
        destination_file_path: "{{ container_path }}pihole/pihole-data/custom.list"
        pihole_list_src: "../templates/pihole-custom.list.j2"

    - name: Configure Pi-Hole
      community.docker.docker_container:
        name: pi-hole
        image: pihole/pihole:latest
        restart_policy: unless-stopped
        restart: true
        security_opts:
          no-new-privileges:true
        env:
          TZ: "{{ timezone }}"
          DNSMASQ_LISTENING: all
        ports:
          - "8080:80/tcp"
          - "53:53/tcp"
          - "53:53/udp"
        volumes:
          - "{{ container_path }}pihole/pihole-data:/etc/pihole"
          - "{{ container_path }}pihole/pihole-dnsmasq:/etc/dnsmasq.d"
        labels:
          traefik.enable: "true"
          traefik.http.routers.pihole.rule: "Host(`pihole.{{ domain }}`)"
          traefik.http.routers.pihole.entrypoints: "https"
          traefik.http.services.pihole.loadbalancer.server.port: "80"
          traefik.docker.network: "services"
        networks:
          - name: services

    - name: Ensure services network exists
      community.docker.docker_network:
        name: services
        state: present
